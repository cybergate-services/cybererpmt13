
version: '2.1'
services:
 
  letsencrypt:
    image: cybergatelabs/letsencrypt
    container_name: letsencrypt
    hostname: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${URL}
      - SUBDOMAINS=${SUBDOMAINS},
      - EXTRA_DOMAINS=${EXTRA_DOMAINS}
      - VALIDATION=${VALIDATION}
      - EMAIL=${EMAIL}
      - DHLEVEL=${DHLEVEL}
      - ONLY_SUBDOMAINS=${ONLY_SUBDOMAINS}
      - STAGING=${STAGING}
      
    networks:
      cybererp-network1:
        aliases:
          - letsencrypt
      cybererp-network2:
        aliases:
          - letsencrypt
      cybererp-network3:
        aliases:
          - letsencrypt
      cybererp-sunmade:
        aliases:
          - letsencrypt
      cybererp-aptlk:
        aliases:
          - letsencrypt
      cybererp-cybergate:
        aliases:
          - letsencrypt
      cybererp-digitalinfomedia:
        aliases:
          - letsencrypt
      
    volumes:
     - ./letsencrypt/config:/config 
    ports:
      - 443:443
      - 80:80 #optional
    restart: always
  
  postgresql_1:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_1
    hostname: postgresql_1
    volumes:
      - './postgresql_1_data:/bitnami/postgresql'
    networks:
      cybererp-network1:
        aliases:
          - postgresql_1
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always
    
  postgresql_2:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_2
    hostname: postgresql_2
    volumes:
      - './postgresql_2_data:/bitnami/postgresql'
    networks:
      cybererp-network2:
        aliases:
          - postgresql_2
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always
  
  postgresql_3:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_3
    hostname: postgresql_3
    volumes:
      - './postgresql_3_data:/bitnami/postgresql'
    networks:
      cybererp-network3:
        aliases:
          - postgresql_3
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always 
    
  postgresql_sunmade:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_sunmade
    hostname: postgresql_sunmade
    volumes:
      - './postgresql_sunmade_data:/bitnami/postgresql'
    networks:
      cybererp-sunmade:
        aliases:
          - postgresql_sunmade
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always 
    
  postgresql_aptlk:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_aptlk
    hostname: postgresql_aptlk
    volumes:
      - './postgresql_aptlk_data:/bitnami/postgresql'
    networks:
      cybererp-aptlk:
        aliases:
          - postgresql_aptlk
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always 
    
  postgresql_cybergate:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_cybergate
    hostname: postgresql_cybergate
    volumes:
      - './postgresql_cybergate_data:/bitnami/postgresql'
    networks:
      cybererp-cybergate:
        aliases:
          - postgresql_cybergate
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always 
    
  postgresql_digitalinfomedia:
    image: 'bitnami/postgresql:11'
    container_name: postgresql_digitalinfomedia
    hostname: postgresql_digitalinfomedia
    volumes:
      - './postgresql_digitalinfomedia_data:/bitnami/postgresql'
    networks:
      cybererp-digitalinfomedia:
        aliases:
          - postgresql_digitalinfomedia
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USER=postgres
      
    restart: always 
  
    
  odoo_customer1:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_customer1
    hostname: odoo_customer1
    volumes:  
      - './odoo_data/customer1:/bitnami'
      - './custom-addons/customer1/:/bitnami/odoo/addons/'
      - './custom-addons/custome1-uploads/:/bitnami/odoo/addons-uploads'
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_1
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:    
      cybererp-network1:
        aliases:
         - odoo_customer1
    depends_on:
      - postgresql_1
    restart: always 
    
  odoo_customer2:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_customer2
    hostname: odoo_customer2
    volumes:  
      - './odoo_data/customer2:/bitnami'
      - './custom-addons/customer2/:/bitnami/odoo/addons/'
      - './custom-addons/custome2-uploads/:/bitnami/odoo/addons-uploads'
      
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_2
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-network2:
        aliases:
         - odoo_customer2
    depends_on:
      - postgresql_2
    restart: always
    
  odoo_customer3:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_customer3
    hostname: odoo_customer3
    volumes:  
      - './odoo_data/customer3:/bitnami'
      - './custom-addons/customer3/:/bitnami/odoo/addons/'
      - './custom-addons/custome3-uploads/:/bitnami/odoo/addons-uploads'
      
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_3
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-network3:
        aliases:
         - odoo_customer3
    depends_on:
      - postgresql_3
    restart: always
    
  odoo_sunmade:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_sunmade
    hostname: odoo_sunmade
    volumes:  
      - './odoo_data/sunmade:/bitnami'
      - './custom-addons/sunmade/:/bitnami/odoo/addons/'
      - './custom-addons/sunmade-uploads/:/bitnami/odoo/addons-uploads'
      
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_sunmade
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-sunmade:
        aliases:
         - odoo_sunmade
    depends_on:
      - postgresql_sunmade
    restart: always
    
  odoo_aptlk:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_aptlk
    hostname: odoo_aptlk
    volumes:  
      - './odoo_data/aptlk:/bitnami'
      - './custom-addons/aptlk/:/bitnami/odoo/addons/'
      - './custom-addons/aptlk-uploads/:/bitnami/odoo/addons-uploads'
      
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_aptlk
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-aptlk:
        aliases:
         - odoo_aptlk
    depends_on:
      - postgresql_aptlk
    restart: always
    
  odoo_cybergate:
    image: 'cybergatelabs/odoo13'
    container_name: odoo_cybergate
    hostname: odoo_cybergate
    volumes:  
      - './odoo_data/cybergate:/bitnami'
      - './custom-addons/cybergate/:/bitnami/odoo/addons/'
      - './custom-addons/cybergate-uploads/:/bitnami/odoo/addons-uploads'
      
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql_cybergate
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-cybergate:
        aliases:
         - odoo_cybergate
    depends_on:
      - postgresql_cybergate
    restart: always
    
  
  pgadmin:
    image: adminer
    container_name: pgadmin
    hostname: pgadmin
    restart: always
    #ports:
    #  - 8080:8080
    # depends_on:
    #  - postgresql
    networks:
      cybererp-network1:
        aliases:
          - pgadmin
      cybererp-network2:
        aliases:
          - pgadmin
      cybererp-network3:
        aliases:
          - pgadmin
      cybererp-sunmade:
        aliases:
          - pgadmin
      cybererp-aptlk:
        aliases:
          - pgadmin
      cybererp-cybergate:
        aliases:
          - pgadmin
      
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/portainer:/data
    restart: always
    networks:
      cybererp-network1:
        aliases:
         - portainer
      cybererp-network2:
        aliases:
         - portainer
      cybererp-network3:
        aliases:
         - portainer
      cybererp-sunmade:
        aliases:
         - portainer
      cybererp-aptlk:
        aliases:
         - portainer
      cybererp-cybergate:
        aliases:
         - portainer
      
  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    hostname: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - CLI_ARGS= #optional
    volumes:
      - ./config/dupicati:/config
      - /opt/backup/duplicati:/backups
      - ./:/source
    ports:
      - 8200:8200
    restart: always
    networks:
      cybererp-network1:
        aliases:
         - duplicati
      cybererp-network2:
        aliases:
         - duplicati
      cybererp-network3:
        aliases:
         - duplicati
      cybererp-sunmade:
        aliases:
         - duplicati
      cybererp-aptlk:
        aliases:
         - duplicati
      cybererp-cybergate:
        aliases:
         - duplicati
      
volumes:
  postgresql_data:
    driver: local
  odoo_data: 
    driver: local
    
networks:
  cybererp-network1:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer1
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.26.1.0/24
  cybererp-network2:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer2
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.27.1.0/24
  cybererp-network3:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer3
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/24
  cybererp-sunmade:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer4
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.29.1.0/24
  cybererp-aptlk:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer5
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.30.1.0/24
  cybererp-cybergate:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-customer6
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.31.1.0/24
    
    
   
        
     
        
